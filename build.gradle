import org.jetbrains.grammarkit.tasks.GenerateLexer
import org.jetbrains.grammarkit.tasks.GenerateParser

buildscript {
  repositories {
    mavenCentral()
  }
}

plugins {
  id "java"
  id "org.jetbrains.intellij" version "0.7.3"
  id "org.jetbrains.grammarkit" version "2021.1.3"
}

apply plugin: 'idea'
apply plugin: 'org.jetbrains.intellij'
apply plugin: 'org.jetbrains.grammarkit'

intellij {
  // see https://www.jetbrains.com/intellij-repository/releases
  version = 'IC-2021.2'
  pluginName 'k'
  // see https://github.com/JetBrains/gradle-intellij-plugin/issues/391
  buildSearchableOptions.enabled = false
  plugins = ['com.intellij.java']
}

version '1.2' // Plugin version
patchPluginXml {
  untilBuild '999.*'
}

grammarKit {
  jflexRelease = '1.7.0-1'
}

sourceSets {
  main {
    java {
      srcDir 'gen'
    }
    resources {
      srcDir 'src/main/resources'
    }
  }
}

task generateKLexer(type: GenerateLexer) {
  source = "src/main/resources/com/appian/intellij/k3/k.flex"
  targetDir = "gen/com/appian/intellij/k3"
  targetClass = "KLexer"
  purgeOldFiles = true
}

task generateKParser(type: GenerateParser) {
  source = "src/main/resources/com/appian/intellij/k3/k.bnf"
  targetRoot = 'gen'
  pathToParser = 'com/appian/intellij/k3/parser/KParser.java'
  pathToPsiRoot = 'com/appian/intellij/k3/psi'
  purgeOldFiles = true
}

compileJava {
  dependsOn generateKLexer
  dependsOn generateKParser
}

if (project.hasProperty('intellijPublishToken')) {
  publishPlugin {
    token intellijPublishToken
  }
}
