pause:{[] print "";/ some comment
     :`4:"pause"}
------------>
Element(EXPRESSION)
  Element(ASSIGNMENT)
    Element(USER_ID)
      PsiElement(variable)('pause')
    PsiElement(:)(':')
    Element(EXPRESSION)
      Element(LAMBDA)
        PsiElement({)('{')
        Element(LAMBDA_PARAMS)
          PsiElement([)('[')
          PsiElement(])(']')
        Element(EXPRESSION)
          Element(USER_ID)
            PsiElement(variable)('print')
          PsiElement(string)('""')
        PsiElement(;)(';')
        PsiComment(comment)('/ some comment\n')
        Element(EXPRESSION)
          PsiElement(:)(':')
          PsiElement(symbol)('`4')
          Element(EXPRESSION)
            PsiElement(:)(':')
            PsiElement(string)('"pause"')
        PsiElement(})('}')
============|


\d .a.p.PROCESS
 / after whitespace
------------>
Element(FILE)
  Element(NAMESPACE_DECLARATION)
    PsiElement(namespace)('\d')
    Element(USER_ID)
      PsiElement(variable)('.a.p.PROCESS')
  PsiElement(new line)('\n')
  PsiComment(comment)(' / after whitespace')
============|


1 / end of line
------------>
Element(FILE)
  Element(EXPRESSION)
    PsiElement(number)('1')
  PsiComment(comment)(' / end of line')
============|


1 / end of line
1
------------>
Element(FILE)
  Element(EXPRESSION)
    PsiElement(number)('1')
  PsiComment(comment)(' / end of line')
  PsiElement(new line)('\n')
  Element(EXPRESSION)
    PsiElement(number)('1')
============|


` / after symbol
1
------------>
Element(FILE)
  Element(EXPRESSION)
    PsiElement(symbol)('`')
  PsiComment(comment)(' / after symbol')
  PsiElement(new line)('\n')
  Element(EXPRESSION)
    PsiElement(number)('1')
============|


` ` ` ` / after symbol vector
1
------------>
Element(FILE)
  Element(EXPRESSION)
    PsiElement(symbol vector)('` ` ` `')
  PsiComment(comment)(' / after symbol vector')
  PsiElement(new line)('\n')
  Element(EXPRESSION)
    PsiElement(number)('1')
============|


- / after verb
1
------------>
Element(FILE)
  Element(EXPRESSION)
    PsiElement(primitive verb)('-')
  PsiComment(comment)(' / after verb')
  PsiElement(new line)('\n')
  Element(EXPRESSION)
    PsiElement(number)('1')
============|


*: / after composed monad
1
------------>
Element(FILE)
  Element(EXPRESSION)
    PsiElement(primitive verb)('*')
    PsiElement(:)(':')
  PsiComment(comment)(' / after composed monad')
  PsiElement(new line)('\n')
  Element(EXPRESSION)
    PsiElement(number)('1')
============|


+/ / after derived verb
1
------------>
Element(FILE)
  Element(EXPRESSION)
    PsiElement(primitive verb)('+')
    PsiElement(adverb)('/')
  PsiComment(comment)(' / after derived verb')
  PsiElement(new line)('\n')
  Element(EXPRESSION)
    PsiElement(number)('1')
============|


: / after colon
1
------------>
Element(FILE)
  Element(EXPRESSION)
    PsiElement(:)(':')
  PsiComment(comment)(' / after colon')
  PsiElement(new line)('\n')
  Element(EXPRESSION)
    PsiElement(number)('1')
============|


:: / after double colon
1
------------>
Element(FILE)
  Element(EXPRESSION)
    PsiElement(:)(':')
    PsiElement(:)(':')
  PsiComment(comment)(' / after double colon')
  PsiElement(new line)('\n')
  Element(EXPRESSION)
    PsiElement(number)('1')
============|


\
all these
are comments
------------>
Element(FILE)
  PsiComment(comment)('\\n')
  PsiComment(comment)('all these')
  PsiComment(comment)('\n')
  PsiComment(comment)('are comments')
